.. raw:: html

  <style type="text/css">
    div.body li.toctree-l1 {
        padding: 0.5em 0 0.2em 0 ;
        list-style-type: none;
        font-size: 150% ;
        }

    div.body li.toctree-l2 {
        font-size: 70% ;
        list-style-type: square;
        }

    div.body li.toctree-l3 {
        font-size: 85% ;
        list-style-type: circle;
        }

    div.bodywrapper blockquote {
	margin: 0 ;
    }

  </style>

.. title:: automatminer

.. image:: _static/logo.svg
   :alt: server
   :align: center
   :width: 600px

Introduction
------------

.. raw:: html

    <style> .red {color:#aa0060; font-weight:bold; font-size:16px} </style>

.. role:: red

:red:`WARNING! These docs and examples are a work in progress.
Read and use at your own risk!`



Automatminer is a tool for *automatically* creating **complete** machine
learning pipelines for materials science, including automatic featurization
with `matminer <https://github.com/hackingmaterials/matminer>`_, feature
reduction, and an AutoML backend. Put in a materials dataset, get out a machine
that predicts materials properties.

How it works
=============

Automatminer automatically decorates a dataset using hundreds of descriptor
techniques from matminer's descriptor library, picks the most useful
features for learning, and runs a separate AutoML pipeline using TPOT.
Once a pipeline has been fit, it can be summarized in a text file, saved to
disk, or used to make predictions on new materials.

.. image:: _static/automatminer_big.jpg
   :alt: server
   :align: center


Here's an example of training on known data, and extending the model to out of sample data.

.. code-block:: python

    from automatminer.pipeline import MatPipe

    # Fit a pipeline to training data to predict band gap
    pipe = MatPipe()
    pipe.fit(train_df, "band gap")

    # Predict bandgap of some unknown materials
    predicted_df = pipe.predict(unknown_df, "band gap")

User manual
--------------

 .. toctree::
    :maxdepth: 2

    installation.rst
    using.rst


.. toctree::
   :hidden:
   :maxdepth: 2

   changelog
   Python API <modules>

What's new?
-----------

Track changes to AMSET through the :doc:`changelog`.

Contributing / Contact / Support
--------------------------------

Want to see something added or changed? Some ways to get involved are:

- Help us improve the documentation â€“ tell us where you got stuck and improve
  the install process for everyone.
- Let us know if you'd like to see certain features.
- Point us to areas of the code that are difficult to understand or use.
- Contribute code. You can do this by forking
  `AMSET on Github <https://github.com/hackingmaterials/amset>`_ and submitting
  a pull request.

The list of contributors to AMSET can be found :doc:`here </contributors>`.
Read more about contributing code to AMSET :doc:`here </contributing>`.

API documentation
------------------

Autogenerated API documentation below:

- :ref:`genindex`
- :ref:`modindex`
- :ref:`search`






